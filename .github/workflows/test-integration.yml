name: Test Integration

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
        test_type:
          - tests_e2e
        os:
          - ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.1

    - name: Setup Python
      uses: mamba-org/setup-micromamba@v1.8.0
      with:
        environment-file: environment-dev.yml
        create-args: >-
          python=${{ matrix.python-version }}
          -c conda-forge

    - name: Install JHub Apps
      run: |
        pip install .

    - name: Install chp
      run: npm install -g configurable-http-proxy

    - name: Start JupyterHub on Ubuntu
      if: matrix.test_type == 'tests_e2e' &&  matrix.os == 'ubuntu-latest'
      run: |
        jupyterhub -f jupyterhub_config.py > jupyterhub-logs.txt &
        # Give it some to time to start properly
        sleep 5
        cat jupyterhub-logs.txt

    - name: Start JupyterHub on Windows
      if: matrix.test_type == 'tests_e2e' &&  matrix.os == 'windows-latest'
      run: |
        start jupyterhub -f jupyterhub_config.py
        # Give it some to time to start properly
        sleep 5

    - name: Install Playwright
      if: matrix.test_type == 'tests_e2e'
      run: |
        pip install pytest-playwright

    - name: Install Playwright Browser
      if: matrix.test_type == 'tests_e2e'
      run: |
        playwright install
    - name: Run Tests
      run: |
        pytest jhub_apps/${{ matrix.test_type }} -vvv

    - name: Upload Playwright Videos
      if: matrix.test_type == 'tests_e2e' && always()
      uses: actions/upload-artifact@v4.3.0
      with:
        name: ${{ matrix.os }}-playwright-videos
        path: videos

    - name: JupyterHub logs
      if: always()
      run: cat jupyterhub-logs.txt

    - name: Debugging with tmate
      if: always()
      uses: mxschmitt/action-tmate@v3.17
