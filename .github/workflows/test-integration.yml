name: Test Integration

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
        test_type:
          - "with_server_options"
          - "not with_server_options"
        os:
          - ubuntu-latest
        jupyterhub:
          - "4.1.5"
          - "5.3.0"
    steps:
    # https://github.com/actions/checkout/releases/tag/v5.0.0
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

    - name: Setup Python
      # https://github.com/actions/setup-python/releases/tag/v6.0.0
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      # https://github.com/astral-sh/setup-uv/releases/tag/v6.8.0
      uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e

    - name: Install dependencies
      run: |
        if [ "${{ matrix.jupyterhub }}" = "4.1.5" ]; then
          uv sync --group test-jupyterhub-4 --extra dev
        else
          uv sync --group test-jupyterhub-5 --extra dev
        fi

    - name: Install chp
      run: npm install -g configurable-http-proxy

    - name: uv pip list
      run: uv pip list

    - name: Verify JupyterHub Version
      run: |
        # Check if the installed version matches the expected version
        GROUP_FLAG=""
        if [ "${{ matrix.jupyterhub }}" = "4.1.5" ]; then
          GROUP_FLAG="--group test-jupyterhub-4"
        else
          GROUP_FLAG="--group test-jupyterhub-5"
        fi
        if [ "$(uv run $GROUP_FLAG --extra dev jupyterhub -V)" != "${{ matrix.jupyterhub }}" ]; then
            echo "JupyterHub version $(uv run $GROUP_FLAG --extra dev jupyterhub -V) != ${{ matrix.jupyterhub }}"
            exit 1
        fi

    - name: Add server options if with server types
      if: matrix.test_type == 'with_server_options'
      run: |
        cat jupyter_config_profile_list >> jupyterhub_config.py
        cat jupyterhub_config.py

    - name: Install Playwright Browser
      run: |
        GROUP_FLAG=""
        if [ "${{ matrix.jupyterhub }}" = "4.1.5" ]; then
          GROUP_FLAG="--group test-jupyterhub-4"
        else
          GROUP_FLAG="--group test-jupyterhub-5"
        fi
        uv run $GROUP_FLAG --extra dev playwright install

    - name: Run Tests
      run: |
        GROUP_FLAG=""
        if [ "${{ matrix.jupyterhub }}" = "4.1.5" ]; then
          GROUP_FLAG="--group test-jupyterhub-4"
        else
          GROUP_FLAG="--group test-jupyterhub-5"
        fi
        uv run $GROUP_FLAG --extra dev pytest jhub_apps/tests/tests_e2e/ -vvv -s -m "${{ matrix.test_type }}" --log-cli-level=INFO

    - name: Create artifact name
      id: artifact-name
      if: always()
      run: |
        if [ "${{ matrix.jupyterhub }}" = "4.1.5" ]; then
            jhub_suffix="4x"
        else
            jhub_suffix="5x"
        fi
        echo "playwright-artifact-name=${{ matrix.test_type }}-$jhub_suffix-python${{ matrix.python-version }}-playwright-videos" >> "$GITHUB_OUTPUT"
        echo "jhub-logs-artifact-name=${{ matrix.test_type }}-$jhub_suffix-python${{ matrix.python-version }}-jupyterhub-logs" >> "$GITHUB_OUTPUT"

    - name: Upload Playwright Videos
      if: always()
      # https://github.com/actions/upload-artifact/releases/tag/v4.6.2
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: ${{ steps.artifact-name.outputs.playwright-artifact-name }}
        path: videos

    - name: Upload JupyterHub logs
      if: always()
      # https://github.com/actions/upload-artifact/releases/tag/v4.6.2
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: ${{ steps.artifact-name.outputs.jhub-logs-artifact-name }}
        path: jupyterhub-logs.txt

    - name: JupyterHub logs
      if: always()
      run: cat jupyterhub-logs.txt
